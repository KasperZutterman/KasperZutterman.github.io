{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/hackerrank-weather-observation-station-5","result":{"data":{"markdownRemark":{"id":"1bdad2ba-b5f4-5614-b776-a2625f8f25d1","html":"<h2 id=\"problem\" style=\"position:relative;\"><a href=\"#problem\" aria-label=\"problem permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Problem</h2>\n<p>Query the two cities in <strong>STATION</strong> with the shortest and longest <strong>CITY</strong> names, as well as their respective lengths (i.e.: number of characters in the name). If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.\nThe <strong>STATION</strong> table is described as follows:</p>\n<p><img src=\"/media/sql/table_station.jpg\"></p>\n<p>where <strong>LAT_N</strong> is the northern latitude and <strong>LONG_W</strong> is the western longitude.</p>\n<p><strong>Sample Input</strong>\nFor example, <strong>CITY</strong> has four entries: <strong>DEF</strong>, <strong>ABC</strong>, <strong>PQRS</strong> and <strong>WXY</strong>.</p>\n<p><strong>Sample Output</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ABC 3\nPQRS 4</code></pre></div>\n<p><strong>Explanation</strong>\nWhen ordered alphabetically, the <strong>CITY</strong> names are listed as <strong>ABC</strong>, <strong>DEF</strong>, <strong>PQRS</strong>, and <strong>WXY</strong>, with lengths <em>3,3,4,</em> and <em>3</em> . The longest name is <strong>PQRS</strong>, but there are <em>3</em> options for shortest named city. Choose <strong>ABC</strong>, because it comes first alphabetically.</p>\n<p><strong>Note</strong>\nYou can write two separate queries to get the desired output. It need not be a single query.</p>\n<h2 id=\"solution\" style=\"position:relative;\"><a href=\"#solution\" aria-label=\"solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution</h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> CITY<span class=\"token punctuation\">,</span> LENGTH<span class=\"token punctuation\">(</span>CITY<span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> CITY \n      <span class=\"token keyword\">FROM</span> STATION \n      <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> LENGTH<span class=\"token punctuation\">(</span>CITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> CITY <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">WHERE</span> ROWNUM <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> \n\n<span class=\"token keyword\">SELECT</span> CITY<span class=\"token punctuation\">,</span> LENGTH<span class=\"token punctuation\">(</span>CITY<span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> CITY \n      <span class=\"token keyword\">FROM</span> STATION \n      <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> LENGTH<span class=\"token punctuation\">(</span>CITY<span class=\"token punctuation\">)</span> <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">WHERE</span> ROWNUM <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"https://www.hackerrank.com/challenges/weather-observation-station-5/problem\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Problem link</a></p>","fields":{"slug":"/posts/hackerrank-weather-observation-station-5","tagSlugs":["/tag/sql/","/tag/hacker-rank/"]},"frontmatter":{"date":"2020-01-01T22:30:00.000Z","description":"This is the solution for the HackerRank - Weather Observation Station 5 - SQL problem.","tags":["SQL","HackerRank"],"title":"HackerRank - Weather Observation Station 5 - SQL Notes","socialImage":"/media/headshot.svg"}}},"pageContext":{"slug":"/posts/hackerrank-weather-observation-station-5"}},"staticQueryHashes":["251939775","3942705351","401334301"]}