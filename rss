<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title><![CDATA[Kasper Zutterman's Blog]]></title><description><![CDATA[Thoughts, stories and ideas.]]></description><link>https://kasperzutterman.github.io/blog//</link><image><url>https://kasperzutterman.github.io/blog//favicon.png</url><title>Kasper Zutterman&apos;s Blog</title><link>https://kasperzutterman.github.io/blog//</link></image><generator>Ghost 2.9</generator><lastBuildDate>Tue, 09 Jun 2020 10:48:43 GMT</lastBuildDate><atom:link href="https://kasperzutterman.github.io/blog//rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[How to programmatically calculate similarities]]></title><description><![CDATA[

One of the most fundamental problems in the current era is being able to find
and connect similar information. I challenge you to think of one application on
the Web that would not benefit from being able to determine similarities between
bits of information. Detection of duplicate documents is becoming increasingly
important for businesses and data scientist. Near-duplicate pages found on the
Web could be plagiarisms, or they could be mirrors with identical information
but released on differe]]></description><link>http://localhost:2368/programmatically-calculate-similarities/</link><guid isPermaLink="false">Ghost__Post__5ebee840f32698165ca9baf4</guid><dc:creator><![CDATA[Kasper Zutterman]]></dc:creator><pubDate>Sat, 16 May 2020 20:59:52 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/05/Spiderman_similarity_meme.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://localhost:2368/content/images/2020/05/Spiderman_similarity_meme.jpg" alt="How to programmatically calculate similarities"/><p/><p>One of the most fundamental problems in the current era is being able to find and connect similar information. I challenge you to think of one application on the Web that would not benefit from being able to determine similarities between bits of information. Detection of duplicate documents is becoming increasingly important for businesses and data scientist. Near-duplicate pages found on the Web could be plagiarisms, or they could be mirrors with identical information but released on different outlets. </p><p>In this article we'll explore a range of techniques and algorithms to determine the similarity between items. We will also explain the how and the why, and have a look at some use cases.</p><h2 id="how-can-we-define-similarity">How can we define similarity?</h2><p>We can define similarity as a measure of how much  2 sets, collections or document have in common when we compare them. The more resemblance the 2 documents have to each other, the higher their similarity. To make this definition resemble a concrete value, we will introduce the Jaccard similarity.</p><h3 id="jaccard-similarity">Jaccard similarity</h3><p>The notion of how similar sets are is called "J<a href="http://localhost:2368/programmatically-calculate-similarities/[Jaccard%20similarity](https://en.wikipedia.org/wiki/Jaccard_index">accard similarity</a>". The <em>Jaccard similarity</em> of two sets, A and B, can be calculated by the ratio of their intersection size divided by their union size. We shall denote the Jaccard similarity of A and B by:</p><p>J(A,B) = |A ∩ B| / |A ∪ B|</p><p>Using the above formula, we are able to calculate the exact similarity of 2 sets. To make this easy method transferable to other sources of information, we need techniques to represent these sources of data as sets.</p><p>For example:</p><p>J(A,B) = |A ∩ B| / |A ∪ B| = |2| / |6 + 4 -2| = 2 / 8 = 0.25</p><figure class="kg-card kg-image-card kg-width-full kg-card-hascaption"><img src="http://localhost:2368/content/images/2020/05/Set_Union.png" class="kg-image" alt="How to programmatically calculate similarities"><figcaption>Two sets with Jaccard similarity 2/8</figcaption></img></figure><h3 id="jaccard-distance">Jaccard distance</h3><p>The Jaccard similarity is a measure of how close sets are, albeit not really a distance measure. To calculate the distance between two sets utilising the Jaccard similarity calculation, we simply take 1 minus the calculated Jaccard similarity. This is called the Jaccard distance, the closer two sets, the higher the Jaccard similarity and thus the lower the Jaccard distance.</p><p>d<sub>J</sub> (A,B) = 1 - J(A,B)</p><h3 id="how-to-shingle-documents">How to shingle documents</h3><p>The best performing way to represent a document as a set, for the purpose of finding lexical matches, is to construct a set containing short strings of text that appear within the document. By doing so, same pieces of text will always be identified regardless of their position. </p><h4 id="k-shingling">k-Shingling</h4><p>A common shingling technique to represent documents as sets  is k-shingling. As a document can simply be seen as a string of characters, we can define a k-shingle of this document as all possible consecutive k length substrings existing in the document. Here you can see an example of a k=2 shingle:</p><pre><code>Original: "Thank you for reading this blog"

k=2 shingled: "Thank you" "you for" "for reading" "reading this" "this blog"</code></pre><h4 id="shingle-size">Shingle size</h4><p>Choosing the best shingle size can be a daunting task, if you take your shingle size to large, you won't be able to find similarities between documents, only if they are a near perfect match. If you take your shingle size to small, as an extreme example k = 1, you will have a bias because the top 1000 most frequently used words represent around 85% of all word usage. All common used characters will be shared between most of the documents you will want to compare.</p><p>To avoid a bias towards too little or too much abstraction, you should pick your k size large enough that the probability of any given shingle appearing in any given document is low.</p><p>You could also decide to shingle on characters in favor of words, this way you could have a representation that is less defined by words but more by the order of words following each other.</p><h3 id="shingle-hashing">Shingle hashing</h3><p>Instead of using using string representations as shingles directly, you should favor the use of a hash function to determine a hash representing the shingle. This can lead to memory-usage reduction and faster comparison speeds. To select the best string hashing function, please have a look at <a href="http://www.cse.yorku.ca/~oz/hash.html">this overview</a> by Ozan Yigit.</p><h2 id="use-cases">Use cases</h2><h4 id="detecting-plagiarism-">Detecting Plagiarism: </h4><p>Detecting plagiarised content relies on our ability to find textual similarities between content. Plagiarized documents may only contain some parts of the original piece mixed in and scrambled up between his own content, or content from even more sources. Determining whether documents are plagiarized can be a daunting task because a character by character comparison won't always yield correct results.</p><h4 id="same-source-articles">Same Source Articles</h4><p>When using news aggregators, such as Google News, you are able to find multiple sources and news outlets reporting about the same event. Aggregators are able to cluster articles about the same topic using similarity scores. Reporter also publish articles through the Associated Press, which can then be redistributed by other websites.</p><h2 id="conclusions">Conclusions</h2><ul><li><em>Jaccard Similarity</em>: The Jaccard similarity coefficient is a statistic used to measure the similarity between sets. It is calculated by the ratio of the size of the intersection to the size of the union.</li><li>Jaccard Distance: The Jaccard distance is a distance measure between sets, calculated as one minus the Jaccard Similarity</li><li>Shingling: A way of representing text documents as a set of strings. By representing a document by its set of k-shingles, we form a set of k long characters that consecutively appear in the document. By calculating the Jaccard similarity of shingled sets, we are able to measure the textual similarity of  documents.</li></ul><h2 id="resources">Resources</h2><ul><li><a href="http://infolab.stanford.edu/~ullman/mmds/ch3.pdf">Mining Massive Datasets Chapter 3 - Anand Rajaraman</a></li><li><a href="https://nlp.stanford.edu/IR-book/">Introduction to Information Retrieval - Christopher D. Manning</a></li><li><a href="http://ethen8181.github.io/machine-learning/clustering_old/text_similarity/text_similarity.html">Text Similarity - Ethen Liu</a></li><li><a href="http://www.cse.yorku.ca/~oz/hash.html">Hash Functions - Ozan Yigit</a></li><li><a href="https://cp-algorithms.com/string/string-hashing.html">String Hashing - E-Maxx Algorithms</a></li></ul>]]></content:encoded></item><item><title><![CDATA[Deploy a Ghost blog on GitHub Pages using Gatsby]]></title><description><![CDATA[If you want to use Ghost as your cms for hosting a blog on GitHub Pages, you need to have a static site generator. We will be using Gatsby to populate the content from our local Ghost installation and deploy it to GitHub Pages.]]></description><link>http://localhost:2368/deploy-a-ghost-blog-on-github-pages-using-gatsby/</link><guid isPermaLink="false">Ghost__Post__5eaecfedf1f71b3ef4680ace</guid><dc:creator><![CDATA[Kasper Zutterman]]></dc:creator><pubDate>Sun, 03 May 2020 18:53:54 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/05/Ghost---GitHub---Gatsby-1.png" medium="image"/><content:encoded><![CDATA[<img src="http://localhost:2368/content/images/2020/05/Ghost---GitHub---Gatsby-1.png" alt="Deploy a Ghost blog on GitHub Pages using Gatsby"/><p>If you want to use Ghost as your cms for hosting a blog on GitHub Pages, you need to have a static site generator. We will be using Gatsby to populate the content from our local Ghost installation and deploy it to GitHub Pages.</p><hr><!--kg-card-begin: markdown--><h3 id="prerequisites">Prerequisites</h3>
<p>In order to follow this tutorial, you should already have <a href="https://nodejs.org/en/download/">Node.js</a> and <a href="https://git-scm.com/downloads">Git</a> installed.</p>
<h3 id="generateblog">Generate Blog</h3>
<ol>
<li>Install the Ghost-CLI</li>
</ol>
<pre><code>npm install ghost-cli@latest -g
</code></pre>
<ol start="2">
<li>Make 2 new directories to house your blog</li>
</ol>
<pre><code>mkdir blog-ghost blog-gatsby
</code></pre>
<ol start="3">
<li>Navigate into the new <code>blog-ghost</code> directory</li>
</ol>
<pre><code>cd blog-ghost
</code></pre>
<ol start="4">
<li>Install Ghost locally</li>
</ol>
<pre><code>ghost install local
</code></pre>
<ol start="5">
<li>Set up your freshly installed local instance of Ghost at <code>https://localhost:2368</code><br>
(follow the installation instructions)</br></li>
<li>Navigate into the new <code>blog-gatsby</code> directory</li>
</ol>
<pre><code>cd ../blog-gatsby
</code></pre>
<ol start="7">
<li>Install the Gatsby-CLI</li>
</ol>
<pre><code>npm install gatsby-cli -g
</code></pre>
<ol start="8">
<li>Install <code>gatsby-starter-ghost</code> using Gatsby-CLI</li>
</ol>
<pre><code>gatsby new . https://github.com/TryGhost/gatsby-starter-ghost.git
</code></pre>
<ol start="9">
<li>Before customising test run Gatsby</li>
</ol>
<pre><code>gatsby develop
</code></pre>
<ol start="10">
<li>Navigate to <code>http://localhost:8000/</code></li>
<li>Generate Gatsby Integration:<br>
Inside the Ghost Admin Panel at <code>https://localhost:2368</code>, go to the &quot;Integrations&quot; screen and click &quot;+ Add custom integration&quot;</br></li>
<li>Copy generated &quot;apiUrl&quot; and &quot;contentApiKey&quot; into blog-gatsby/.ghost.json</li>
</ol>
<pre><code>{
  &quot;development&quot;: {
    &quot;apiUrl&quot;: &quot;http://localhost:2368&quot;,
    &quot;contentApiKey&quot;: &quot;&lt;yourContentApiKey&gt;&quot;
  },
  &quot;production&quot;: {
    &quot;apiUrl&quot;: &quot;http://localhost:2368&quot;,
    &quot;contentApiKey&quot;: &quot;&lt;yourContentApiKey&gt;&quot;
  }
}
</code></pre>
<ol start="13">
<li>Start Gatsby development</li>
</ol>
<pre><code>gatsby develop
</code></pre>
<h3 id="publishblog">Publish Blog</h3>
<ol>
<li>Build Blog</li>
</ol>
<pre><code>gatsby build
</code></pre>
<ol start="2">
<li>View production version at <code>https://localhost:9000</code></li>
</ol>
<pre><code>gatsby serve
</code></pre>
<ol start="3">
<li>Integrate Gatsby Blog to GitHub Pages:<br>
Inside <code>blog-gatsby/</code></br></li>
</ol>
<pre><code>npm install gh-pages
</code></pre>
<ol start="4">
<li>Add GitHub repository name to <code>gatsby-config.js</code></li>
</ol>
<pre><code>module.exports = {
  pathPrefix: &quot;/&lt;repository_name&gt;&quot;,
}
</code></pre>
<ol start="5">
<li>Add a custom deploy command to package.json</li>
</ol>
<pre><code>{
  &quot;scripts&quot;: {
    &quot;deploy&quot;: &quot;gatsby build --prefix-paths &amp;&amp; gh-pages -d public&quot;
  }
}
</code></pre>
<p>This creates a deploy command that build a static version of your blog and pushes it to GitHub<br>
6. Add your GitHub repository as the remote origin to your Gatsby Git repository</br></p>
<pre><code>git remote add origin https://&lt;username&gt;.github.com/&lt;repository_name&gt;
</code></pre>
<ol start="7">
<li>Deploying your Blog:</li>
</ol>
<pre><code>npm run deploy
</code></pre>
<p>You will now be able to see your blog at <code>&lt;username&gt;.github.io&lt;repository_name&gt;</code>.</p>
<h3 id="additionalresourcesthatmaybehelpful">Additional resources that may be helpful</h3>
<ul>
<li><a href="https://www.gatsbyjs.org/docs/sourcing-from-ghost/">Sourcing from Ghost</a> - Gatsby documentation</li>
<li><a href="https://ghost.org/docs/api/v3/gatsby/">Working With Gatsby</a> - Ghost documentation</li>
<li><a href="https://www.gatsbyjs.org/blog/2019-01-14-modern-publications-with-gatsby-ghost/">Modern publications with Gatsby &amp; Ghost</a> - by John O'Nolan</li>
<li><a href="https://blog.bitsrc.io/deploy-a-gatsby-site-on-github-pages-for-free-f18853c1b7a9">Deploy a Gatsby Site on GitHub Pages for Free</a> - by Shaumik Daityari</li>
</ul>
<h3 id="conclusion">Conclusion</h3>
<p>In this post, you have accomplished the following:</p>
<ul>
<li>Install local Ghost crm blog</li>
<li>Install Gatsby blog using Ghost crm data</li>
<li>Deploy static Gatsby blog to GitHub Pages</li>
</ul>
<p>If you have any further questions, please feel free to contact me on <a href="https://twitter.com/KasperZutterman">Twitter</a></p>
<!--kg-card-end: markdown--><p/><p/><p/></hr>]]></content:encoded></item><item><title><![CDATA[Welcome to my blog!]]></title><description><![CDATA[I'm Kasper Zutterman, a 20 year old Information Engineering Technology student at Ghent University. And I would like to welcome you to my Blog!]]></description><link>http://localhost:2368/welcome/</link><guid isPermaLink="false">Ghost__Post__5eadcc9ad7e0cf58a86eb0a0</guid><dc:creator><![CDATA[Kasper Zutterman]]></dc:creator><pubDate>Sun, 03 May 2020 07:38:42 GMT</pubDate><media:content url="https://images.unsplash.com/photo-1543332164-6e82f355badc?ixlib=rb-1.2.1&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;cs=tinysrgb&amp;w=2000&amp;fit=max&amp;ixid=eyJhcHBfaWQiOjExNzczfQ" medium="image"/><content:encoded><![CDATA[<h3 id="hello-world-">Hello world!</h3><img src="https://images.unsplash.com/photo-1543332164-6e82f355badc?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ" alt="Welcome to my blog!"/><p>I'm Kasper Zutterman, a 20 year old Information Engineering Technology student at Ghent University. I am born an raised in Belgium and enjoy practicing track &amp; field in my spare time. </p><p>Ok, let’s move on to what this blog is about. Since my other passion is coding, this will be a technology and programming related blog. I want to share my experience, helpful guides and fascinating projects.</p><p>Glad you came by.  I wanted to welcome you and let you know I appreciate you spending time here at my blog very much.</p><p>Another thing I will always appreciate is your feedback to the blog.  If you have any comments or suggestions I welcome them and would love to hear them. So please feel free to contact me via social media!</p><p>If you want to know more about me just click <a href="https://kasperzutterman.github.io/">here</a>, and always feel free to leave any comment, question or feedback.</p><p>Hope you enjoy it :)</p><p>Cheers,</p><p>Kasper</p>]]></content:encoded></item></channel></rss>